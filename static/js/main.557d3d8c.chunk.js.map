{"version":3,"sources":["components/quotes.js","components/body.js","components/footer.js","components/header.js","App.js","reportWebVitals.js","index.js"],"names":["Quotes","class","id","setInterval","fetch","then","resp","json","data","document","getElementById","innerHTML","content","querySelector","author","writeQuote","catch","err","console","log","Body","className","src","width","height","frameborder","allowtransparency","allow","Footer","date","Date","toLocaleDateString","weatherInfo","cityID","d","celcius","Math","round","parseFloat","main","temp","description","weather","name","indexOf","body","drawWeather","window","onload","Header","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"+LAaeA,MAXf,WACC,OACC,sBAAKC,MAAM,YAAX,UACC,qBAAKC,GAAG,QAAR,sFAGA,qBAAKA,GAAG,SAAR,0CAqBHC,iBAZCC,MAFW,kCAGTC,MAAK,SAAUC,GACf,OAAOA,EAAKC,UAEZF,MAAK,SAAUG,IAWlB,SAAoBA,GACnBC,SAASC,eAAe,SAASC,UAAYH,EAAKI,QAClDH,SAASI,cAAc,UAAUF,UAAYH,EAAKM,OAZhDC,CAAWP,MAEXQ,OAAM,SAAUC,GAChBC,QAAQC,IAAIF,MAIc,KCNdG,MAnBf,WACC,OACC,uBAAMC,UAAU,WAAhB,UACC,yBAASA,UAAU,mBAAnB,SACC,wBACCC,IAAI,iEACJC,MAAM,MACNC,OAAO,MACPC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,kBACNN,UAAU,cAGZ,cAAC,EAAD,QCMYO,MAtBf,WACC,IACMC,GADI,IAAIC,MACGC,qBAEjB,OACC,uBAAMV,UAAU,aAAhB,UACC,0BAASnB,GAAG,UAAZ,UACC,oBAAIA,GAAG,SACP,oCACC,qBAAKA,GAAG,gBACR,qBAAKA,GAAG,mBAGV,yBAASA,GAAG,gBAAZ,SACC,mBAAGmB,UAAU,WAAb,SACC,sBAAMnB,GAAG,OAAT,SAAiB2B,YAStB,SAASG,EAAYC,GAEpB7B,MACC,sDACC6B,EADD,2CAKC5B,MAAK,SAAUC,GACf,OAAOA,EAAKC,UAEZF,MAAK,SAAUG,IAYlB,SAAqB0B,GACpB,IAAIC,EAAUC,KAAKC,MAAMC,WAAWJ,EAAEK,KAAKC,MAAQ,QAC/CC,EAAcP,EAAEQ,QAAQ,GAAGD,YAE/BhC,SAASC,eAAe,eAAeC,UAAYuB,EAAEQ,QAAQ,GAAGD,YAChEhC,SAASC,eAAe,QAAQC,UAAYwB,EAAU,QACtD1B,SAASC,eAAe,YAAYC,UAAYuB,EAAES,KAC9CF,EAAYG,QAAQ,QAAU,EACjCnC,SAASoC,KAAKxB,UAAY,QAChBoB,EAAYG,QAAQ,SAAW,EACzCnC,SAASoC,KAAKxB,UAAY,SAChBoB,EAAYG,QAAQ,SAAW,IACzCnC,SAASoC,KAAKxB,UAAY,SAvBzByB,CAAYtC,MAEZQ,OAAM,eAKT+B,OAAOC,OAAS,WACfhB,EAAY,UCpCEiB,MARf,WACC,OACC,sBAAM5B,UAAU,aAAhB,SACC,oBAAIA,UAAU,cAAd,8BCWY6B,MAXf,WACC,OACC,uBAAM7B,UAAU,GAAhB,UACC,cAAC,EAAD,IACA,cAAC,EAAD,IAEA,cAAC,EAAD,QCCY8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhD,MAAK,YAAkD,IAA/CiD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpD,SAASC,eAAe,SAM1ByC,K","file":"static/js/main.557d3d8c.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Quotes() {\n\treturn (\n\t\t<div class=\"container\">\n\t\t\t<div id=\"quote\">\n\t\t\t\tDon't forget: life is a race, if you don't run fast, you'll get trampled\n\t\t\t</div>\n\t\t\t<div id=\"author\">- Anonymous ðŸŽ­</div>\n\t\t</div>\n\t)\n}\n\nexport default Quotes\n\nconst url = 'https://api.quotable.io/random'\nfunction generateQuote() {\n\tfetch(url)\n\t\t.then(function (resp) {\n\t\t\treturn resp.json()\n\t\t})\n\t\t.then(function (data) {\n\t\t\twriteQuote(data)\n\t\t})\n\t\t.catch(function (err) {\n\t\t\tconsole.log(err)\n\t\t})\n}\n// Repeat generateQuote() every 10 seconds\nsetInterval(generateQuote(), 10000)\n//Note - 10000 milliseconds = 10\n\nfunction writeQuote(data) {\n\tdocument.getElementById('quote').innerHTML = data.content\n\tdocument.querySelector('author').innerHTML = data.author\n}\n","import React from 'react'\n\nimport Quotes from '../components/quotes'\n\nfunction Body() {\n\treturn (\n\t\t<main className=\"mainBody\">\n\t\t\t<section className=\"spotifyContainer\">\n\t\t\t\t<iframe\n\t\t\t\t\tsrc=\"https://open.spotify.com/embed/playlist/37i9dQZF1DWWQRwui0ExPn\"\n\t\t\t\t\twidth=\"300\"\n\t\t\t\t\theight=\"380\"\n\t\t\t\t\tframeborder=\"0\"\n\t\t\t\t\tallowtransparency=\"true\"\n\t\t\t\t\tallow=\"encrypted-media\"\n\t\t\t\t\tclassName=\"spotify\"\n\t\t\t\t></iframe>\n\t\t\t</section>\n\t\t\t<Quotes />\n\t\t</main>\n\t)\n}\n\nexport default Body\n","import React from 'react'\n\nfunction Footer() {\n\tlet now = new Date()\n\tconst date = now.toLocaleDateString()\n\n\treturn (\n\t\t<main className=\"mainFooter\">\n\t\t\t<section id=\"weather\">\n\t\t\t\t<h1 id=\"temp\"></h1>\n\t\t\t\t<section>\n\t\t\t\t\t<div id=\"description\"></div>\n\t\t\t\t\t<div id=\"location\"></div>\n\t\t\t\t</section>\n\t\t\t</section>\n\t\t\t<section id=\"timeContainer\">\n\t\t\t\t<p className=\"dateText\">\n\t\t\t\t\t<span id=\"date\">{date}</span>\n\t\t\t\t</p>\n\t\t\t</section>\n\t\t</main>\n\t)\n}\n\nexport default Footer\n\nfunction weatherInfo(cityID) {\n\tvar key = '7612f2547cbd752837c1454e3e34d400'\n\tfetch(\n\t\t'https://api.openweathermap.org/data/2.5/weather?id=' +\n\t\t\tcityID +\n\t\t\t'&appid=' +\n\t\t\tkey\n\t)\n\t\t.then(function (resp) {\n\t\t\treturn resp.json()\n\t\t}) // Convert data to json\n\t\t.then(function (data) {\n\t\t\tdrawWeather(data)\n\t\t})\n\t\t.catch(function () {\n\t\t\t// catch any errors\n\t\t})\n}\n\nwindow.onload = function () {\n\tweatherInfo(2673730)\n}\n\nfunction drawWeather(d) {\n\tvar celcius = Math.round(parseFloat(d.main.temp) - 273.15)\n\tvar description = d.weather[0].description\n\n\tdocument.getElementById('description').innerHTML = d.weather[0].description\n\tdocument.getElementById('temp').innerHTML = celcius + '&deg;'\n\tdocument.getElementById('location').innerHTML = d.name\n\tif (description.indexOf('rain') > 0) {\n\t\tdocument.body.className = 'rainy'\n\t} else if (description.indexOf('cloud') > 0) {\n\t\tdocument.body.className = 'cloudy'\n\t} else if (description.indexOf('sunny') > 0) {\n\t\tdocument.body.className = 'sunny'\n\t}\n}\n","import React from 'react'\n\nfunction Header() {\n\treturn (\n\t\t<main className=\"mainHeader\">\n\t\t\t<h1 className=\"headerTitle\"> Study Board </h1>\n\t\t</main>\n\t)\n}\n\nexport default Header\n","import './App.css'\nimport Body from './components/body'\nimport Footer from './components/footer'\nimport Header from './components/header'\n\nfunction App() {\n\treturn (\n\t\t<main className=\"\">\n\t\t\t<Header />\n\t\t\t<Body />\n\n\t\t\t<Footer />\n\t\t</main>\n\t)\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}